const sendReply = require("../infrastructure/facebookApi");

module.exports = async function handleIncomingMessage(body) {
  for (const entry of body.entry) {
    const event = entry.messaging[0];
    const senderId = event.sender.id;
    const { message } = event;

    if (!message) return;

    const { text, attachments } = message;

    if (text) {
      console.log("üì© ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:", text);
      await sendReply(senderId, `‡∏Ñ‡∏∏‡∏ì‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤: "${text}"`);
    }

    if (attachments && attachments.length > 0) {
      for (const attachment of attachments) {
        const type = attachment.type;
        const url = attachment.payload?.url || "(‡πÑ‡∏°‡πà‡∏°‡∏µ URL)";

        console.log(`üìé ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ${type.toUpperCase()}: ${url}`);

        if (["image", "video", "audio", "file"].includes(type)) {
          await sendReply(
            senderId,
            `‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó ${type} ‡πÅ‡∏•‡πâ‡∏ß ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö!`
          );
        } else if (type === "sticker") {
          await sendReply(senderId, "‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏à‡∏±‡∏á ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏Ñ‡∏£‡∏±‡∏ö!");
        } else {
          await sendReply(senderId, `‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß (‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${type})`);
        }
      }
    }
  }
};
